# Generated by Django 5.1 on 2024-09-04 23:35

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShippingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=26)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(blank=True, max_length=15, null=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField(blank=True, null=True)),
                ('ordered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('', 'Status (intransit/delivered)'), ('packaging', 'Packaging'), ('in-transit', 'In-Transit'), ('delivered', 'Delivered'), ('not-shipped', 'Not Shipped'), ('refunded', 'Refunded')], default='packaging', max_length=20)),
                ('payment_method', models.CharField(choices=[('', 'Payment method'), ('cash', 'Cash'), ('bank transfer', 'Bank transfer'), ('paystack', 'Paystack'), ('flutterwave', 'Flutterwave')], max_length=20)),
                ('request_refund', models.BooleanField(default=False)),
                ('ordered_shipping_fee', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('ordered_subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ordered_overall_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_address', to='account.address')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shipping_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cart.shippingmethod')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
                ('slug', models.SlugField(max_length=260, unique=True)),
                ('description', models.TextField()),
                ('image_1', models.ImageField(upload_to='product_img', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg'])])),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='product_img', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg'])])),
                ('image_3', models.ImageField(blank=True, null=True, upload_to='product_img', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg'])])),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='product_img', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg'])])),
                ('stock', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('available_colours', multiselectfield.db.fields.MultiSelectField(choices=[('', 'Select colour'), ('red', 'red'), ('blue', 'blue'), ('white', 'white'), ('black', 'black'), ('yellow', 'yellow'), ('purple', 'purple'), ('others', 'others')], max_length=42)),
                ('available_size', multiselectfield.db.fields.MultiSelectField(choices=[('', 'Select Size'), ('l', 'L'), ('md', 'md'), ('sm', 'sm'), ('xl', 'xl')], max_length=11)),
                ('most_rated', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(to='cart.category')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(to='cart.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('colour', models.CharField(choices=[('', 'Select colour'), ('red', 'red'), ('blue', 'blue'), ('white', 'white'), ('black', 'black'), ('yellow', 'yellow'), ('purple', 'purple'), ('others', 'others')], max_length=20)),
                ('size', models.CharField(choices=[('', 'Select Size'), ('l', 'L'), ('md', 'md'), ('sm', 'sm'), ('xl', 'xl')], max_length=20)),
                ('order_item_name', models.CharField(blank=True, max_length=50, null=True)),
                ('ordered_item_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ordered_item_discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ordered_item_subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cart.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cart.product')),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
    ]
